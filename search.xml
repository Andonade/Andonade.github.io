<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>这个博客的由来</title>
    <url>/2023/10/14/blog-history/</url>
    <content><![CDATA[<p>这篇文章想要记录一下我的个人博客的由来，从时间线来说，这可以追溯到大一刚开学不久，且让我从头慢慢说起</p>
<h2 id="萌芽"><a href="#萌芽" class="headerlink" title="萌芽"></a>萌芽</h2><p>计算机的学习离不开网上大量的文档、博客，大一刚入学，需要学习许多新知识的我自然少不了接触一些博客，现在回忆起来，记忆所能探寻的最深处大抵是<a class="link"   href="https://www.liaoxuefeng.com/wiki/896043488029600" >廖雪峰的 Git 教程</a>，没有去参加科协基础技能培训的我就是靠着这个博客学会了 Git 的基本操作</p>
<p>在之后的学习生活中，开始使用<a class="link"   href="https://github.com/" > Github </a>的我接触到了几个学长的 Github 账号，无聊逛 repo 的过程中看到了他们博客的仓库，让我印象比较深刻的就是 Holder 和 c7w 的博客仓库，顺手点进网站，当时的我大概是惊讶于这样风格各异但又美观的网站用 HTML , CSS 和 js 是怎么手搓出来的，没错，当时的 Andonade 丝毫不知道博客框架这样的东西，以为世界上的所有网站都是用上述三种语言手搓出来的。于是当时傻傻的 Andonade 就在对拥有自己美观的博客网站和手搓出美观网站的困难之间选择了不去想它，这大抵就是整个大一我离拥有自己的博客最近的一次了，在此之后的</p>
<h2 id="唤醒"><a href="#唤醒" class="headerlink" title="唤醒"></a>唤醒</h2><p>大概是大一春季学期期末结束之后的一段时间，有两件事算是唤醒了我有关个人博客的想法。</p>
<p>第一件事呢，就是在科协水群听说了 abmfy 学长在 Rust 小学期中写的 Wordle 有着十分精美的前端，去 Github 膜拜后发现他写的 Wordle 也部署在了他的个人网站上，虽然他的个人博客还没装修好，但是这也提醒了我还有个拥有个人博客的想法，虽然当时的 Andonade 没有立即展开行动，但是埋在心中的念想算是被唤醒了，暑陪过程中也有意识的学习了一些 HTML 和 CSS 的知识（虽然完全没用上），不过也算是给搭建个人博客开了个好头</p>
<p>第二件事就是高中时的一位朋友在今年，也就是23年的七月初搭建起了他的个人博客，你也可以在我的<a href="https://andonade.github.io/links">友链</a>里找到他，他在朋友圈里宣传的时候，我在他的评论区下给自己开了个搭博客的坑，开坑就算了，在开学初他跑来询问我的博客搭建进度并想和我交换友链，这下可以真是尴尬了，摆烂的 Andonade 连怎么开始搭建博客都还没去看呢，尴尬之余，这件事也给了我一个助推（脑内音：Andonade 你不能再摆烂了！！！），阻止我在摆烂的路上越走越远</p>
<h2 id="开端"><a href="#开端" class="headerlink" title="开端"></a>开端</h2><p>大二秋季学期的国庆假期期间，闲着没事干的 Andonade 终于想起了他心心念念的个人博客，那么应该从哪里开始呢？当时的 Andonade 也不知道，计算机学习的第一步是什么？是模仿（暴论）！于是我就跑去看了 Holder 的博客仓库，没错，就是上面的那个 Holder ， 从他的仓库里我了解到了<a class="link"   href="https://hexo.io/index.html" > Hexo </a>和<a class="link"   href="https://www.travis-ci.com/" > Travis CI bot </a>这两个工具，我也懒得比较 Hexo 和其他博客框架的区别，就开始看 Hexo 的官方文档了，并且做了一些前期的准备</p>
<div class="note info"><p>于 2023&#x2F;10&#x2F;12 本博客第一次建库，望周知</p>
</div>

<h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>前期的准备是顺利，简简单单地安装一些依赖即可，然后噩梦才刚要开始，由于官方文档的引导并不算好，并且我自身对博客的搭建也有些先入为主的想法，导致一开始使用<a class="link"   href="https://github.com/saicaca/hexo-theme-vivia" >主题 vivia </a>配置后在 Github 一直 <code>Build Fail</code> ，这个问题在之后的过程也频繁的出现，实际上 Gtihub 总共给我发的通知我 <code>Build Fail</code> 的邮件足足有<strong>60条</strong>！！不管我怎么调整（现在想来全是傻傻的无用功），均以失败告终的结果使得我有些急躁，于是我将本地以及 Github 上的远程库全部删除，想要从头再来</p>
<p>第二次建库，我将自己的博客与 Holder 的博客进行了比较，发现了一个问题，<em>vivia</em> 的文档实在是太简略了，于是我就打算重新找一个文档详细并且同样美观的主题，我很快就翻到了目前这个博客使用的主题 <em>Redefine</em> ，这个主题完美符合了我的要求，不仅外观设计简洁大方，并且还拥有非常详细的文档。所以我便重拾信心，开始使用新主题搭建博客，与第一次建库一样，我反复地遇到 <code>Build Fail</code> ，并且是和第一次一样的愚蠢原因，几十次的失败确实有点难顶，我在朋友圈发牢骚，和好朋友吐槽，最终也是与第一次一样，我删掉了本地和远程库</p>
<p>第三次建库，依然使用 <em>redefine</em> 的我开始摸到一些门路，不过说实话，或许 Andonade 直到第三次建库才开始真正的思考 <code>Build Fail</code> 的原因，之前几乎每次 <code>Build Fail</code> 的日志中都写着像下面这样的信息</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">Configuration file: /github/workspace/./_config.yml</span><br><span class="line">             Theme: redefine</span><br><span class="line">github-pages 228 | Error:  The redefine theme could not be found.</span><br></pre></td></tr></table></figure></div>

<p>没错，就是因为 Github ，或者确切地来说, Jekyll 无法理解 <em>redefine</em> 是什么主题，才导致一次又一次的 <code>Build Fail</code> ，然而 Andonade 在前两次建库中却一次也没有认真想过，Jekyll 到底是个什么东西，不过好在在第三次尝试的时候，Andonade 去搜索了，并惊讶的发现 Jekyll 与 Hexo 相同，也是静态网站的生成器，所以根本不是我配置的问题，而是两者互不兼容，我再怎么修改配置内容，只要我放在远程库里的是博客的源文件，由于使用的是 Hexo ，Jekyll 就永远没办法成功搭建我的网站，于是我转而在本地生成网站静态文件，在 YAML 配置文件里加入了下面的信息</p>
<div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/Andonade/Andonade.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></div>

<p>然后使用以下命令，来生成并部署我的网页</p>
<div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean  #删除生成的网页静态文件</span><br><span class="line">hexo d -g   #生成网页静态文件并根据上面的配置信息进行部署</span><br></pre></td></tr></table></figure></div>

<p>虽然对代理的要求有点高，但是成功之后，上传到远程库上的将会是本地生成的网页静态文件，这时候 Jekyll 将能够轻松将其构建，解决了兼容的问题，而我的个人博客也终于成功部署在了现在这个网站</p>
<h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p>其实，有关这个博客的工作依然还没完成，所以这个所谓的<em>写在最后</em>也并非就是最后，categories, tags 还有 about 页面仍然没有完成，网站也有些小瑕疵仍待改进，最重要的是，目前手工进行生成并部署的方式还是太麻烦了，因此不久后本站将要通过 Travis CI bot 实现 CI，不过这篇 Post 暂且写到这里，我们下次再见！</p>
<details class="blue" data-header-exclude><summary><i class="fa-solid fa-chevron-right"></i>感谢以下在搭建本博客过程中给我带来参考的内容 </summary>
              <div class='content'>
              <p><a class="link"   href="https://easyhexo.com/" >Easy Hexo🧑‍💻</a></p><p><a class="link"   href="https://redefine-docs.ohevan.com/" >Redefine docs</a></p><p><a class="link"   href="https://github.com/Ashitemaru/Ashitemaru.github.io" >Holder 的个人博客仓库</a></p><p><a class="link"   href="https://github.com/CainHappyfish/CainHappyfish.github.io" >破酥 的个人博客仓库</a>以及破酥本人的亲自指导</p><p><a class="link"   href="https://github.com/c7w/c7w.github.io" >c7w 的个人博客仓库</a></p>
              </div>
            </details>
]]></content>
      <categories>
        <category>【杂谈】过去、或者未来的过去</category>
      </categories>
      <tags>
        <tag>blog</tag>
        <tag>talk</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/10/13/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo</a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting</a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment</a></p>
]]></content>
  </entry>
</search>
